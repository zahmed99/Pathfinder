Statement of Goals:

To create a pathfinding program that can find the shortest distance 
between two points.
The program should also have a clean and intuitive GUI.

Functional Description:

This application will take user input for the position of two points. The first will be the starting point, and 
the second will be the end point. The application will then implement the A* pathfinding algorithim in order to
calculate the shortest path between the two points. The path will be shown to the user at the end of each run.

The application will support "walls", or obstructions that the pathfinder will have to go around, which will change 
the path. These walls will be user-specified before every run. The "walls" will be implemented as objects that have 
a special flag turned on, which will let the program know that it cannot include them in its path.

The application will have an intuitive Graphical User Interface, which will make it simpler for users to interact with.
The GUI will consist of a square matrix of varying size, called the grid, and a sidebar with different user options, called 
the menu. The grid will be interactable and allow the user to set the starting and ending points, and walls, through cursor clicks.
While the program is running, the GUI will visualize the pathfinding algorithim and show each step of the process on the matrix,
until the shortest path is found. Once the path is found, it will be highlighted for the user.

User Interface:

Milestone/Necessary Components:
- Pathfinder class: used to calculate shortest path
    - Needs x and y pos, current space on grid, method to determine next best step.
- Grid:
    - A square matrix that represents a space/map. This map is split up into base componets called tiles.
- Tile:
- GUI:

Resources:
https://www.raywenderlich.com/3011-how-to-implement-a-pathfinding-with-cocos2d-tutorial
https://www.raywenderlich.com/3016-introduction-to-a-pathfinding
http://theory.stanford.edu/~amitp/GameProgramming/AStarComparison.html

